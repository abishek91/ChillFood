# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2016-11-01 23:51
from __future__ import unicode_literals

import ChillFood.login.models
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('Veg', 'Veg'), ('Vegan', 'Vegan'), ('Non-veg', 'Non-veg')], max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(blank=True, max_length=200)),
                ('tastiness', models.IntegerField(blank=True)),
                ('difficulty', models.IntegerField(blank=True)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Cuisine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='List',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200)),
                ('type', models.IntegerField(choices=[(1, 'Category'), (2, 'Applicance'), (3, 'Cuisine')])),
            ],
        ),
        migrations.CreateModel(
            name='Nutrient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='NutrientValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=3, max_digits=8)),
                ('unit', models.CharField(max_length=200)),
                ('percentOfDailyNeeds', models.DecimalField(decimal_places=3, max_digits=6)),
                ('nutrient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChillFood.Nutrient')),
            ],
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Preferences',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categories', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50), size=None)),
                ('appliances', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50), size=None)),
                ('cuisines', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50), size=None)),
                ('price_min', models.IntegerField(blank=True)),
                ('price_max', models.IntegerField(blank=True)),
                ('has_video', models.BooleanField()),
                ('calories', models.IntegerField(blank=True)),
                ('sort_by', models.IntegerField(choices=[(1, 'Difficulty'), (2, 'Tastiness')], default=1)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChillFood.Person')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pic', models.ImageField(blank=True, upload_to='images')),
                ('title', models.CharField(max_length=200)),
                ('time', models.IntegerField()),
                ('video_link', models.CharField(blank=True, max_length=200)),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('cook', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ChillFood.Person')),
            ],
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.CharField(blank=True, max_length=200)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('display', models.CharField(blank=True, max_length=200)),
                ('ingredient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChillFood.Ingredient')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChillFood.Recipe')),
            ],
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_number', models.IntegerField(blank=True)),
                ('instruction', models.CharField(max_length=2000)),
                ('picture', models.ImageField(blank=True, upload_to='steps')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChillFood.Recipe')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.TextField(max_length=100)),
                ('bio', models.TextField(blank=True, max_length=420)),
                ('birthdate', models.DateField(blank=True, null=True, validators=[ChillFood.login.models.no_future_dates])),
                ('photo', models.ImageField(blank=True, upload_to='user_photo')),
                ('is_confirmed', models.BooleanField(default=False)),
                ('following', models.ManyToManyField(related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'users',
                'verbose_name': 'user',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AddField(
            model_name='nutrientvalue',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChillFood.Recipe'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='recipes',
            field=models.ManyToManyField(to='ChillFood.Recipe'),
        ),
        migrations.AddField(
            model_name='cuisine',
            name='recipes',
            field=models.ManyToManyField(to='ChillFood.Recipe'),
        ),
        migrations.AddField(
            model_name='comment',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChillFood.Person'),
        ),
        migrations.AddField(
            model_name='comment',
            name='recipe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ChillFood.Recipe'),
        ),
        migrations.AddField(
            model_name='category',
            name='recipes',
            field=models.ManyToManyField(to='ChillFood.Recipe'),
        ),
    ]
